{"version":3,"file":"objectexpression.js","sourceRoot":"","sources":["../../../src/linq/expressions/objectexpression.ts"],"names":[],"mappings":";;AACA,6CAAuE;AAEvE,sBAA8B,SAAQ,uBAAU;IAC5C,YAAmB,UAAkC;QACjD,KAAK,CAAC,2BAAc,CAAC,MAAM,CAAC,CAAC;QADd,eAAU,GAAV,UAAU,CAAwB;IAErD,CAAC;IAEM,KAAK,CAAC,UAA6B;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAC3F,CAAC;YACG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAC/C,CAAC;gBACG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;oBAC/I,MAAM,CAAC,KAAK,CAAC;YACrB,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;CACJ;AAnBD,4CAmBC","sourcesContent":["import { IObjectExpression, IObjectProperty } from './interfaces/iobjectexpression';\nimport { IExpression, Expression, ExpressionType } from './expression';\n\nexport class ObjectExpression extends Expression implements IObjectExpression {\n    constructor(public properties: Array<IObjectProperty>) {\n        super(ExpressionType.Object);\n    }\n\n    public equal(expression: IObjectExpression): boolean {\n        if (this.type == expression.type && this.properties.length == expression.properties.length)\n        {\n            for (let i = 0; i < this.properties.length; i++)\n            {\n                if (this.properties[i].key.equal(expression.properties[i].key) == false || this.properties[i].value.equal(expression.properties[i].value) == false)\n                    return false;\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport { IObjectExpression, IObjectProperty }"]}