{"version":3,"file":"literalexpression.js","sourceRoot":"","sources":["../../../src/linq/expressions/literalexpression.ts"],"names":[],"mappings":";;AAAA,6CAAuE;AAMvE,uBAA+B,SAAQ,uBAAU;IAC7C,YAAmB,KAAU;QACzB,KAAK,CAAC,2BAAc,CAAC,OAAO,CAAC,CAAC;QADf,UAAK,GAAL,KAAK,CAAK;IAE7B,CAAC;CACJ;AAJD,8CAIC","sourcesContent":["import { IExpression, Expression, ExpressionType } from './expression';\r\n\r\nexport interface ILiteralExpression extends IExpression {\r\n    value: any\r\n}\r\n\r\nexport class LiteralExpression extends Expression implements ILiteralExpression {\r\n    constructor(public value: any) {\r\n        super(ExpressionType.Literal);\r\n    }\r\n}"]}