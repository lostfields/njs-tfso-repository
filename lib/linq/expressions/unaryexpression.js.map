{"version":3,"file":"unaryexpression.js","sourceRoot":"","sources":["../../../src/linq/expressions/unaryexpression.ts"],"names":[],"mappings":";;AAAA,6CAAuE;AAEvE,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,yDAAO,CAAA;IACP,uDAAM,CAAA;AACV,CAAC,EAHW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAGzB;AAED,IAAY,iBAOX;AAPD,WAAY,iBAAiB;IACzB,mEAAS,CAAA;IACT,mEAAS,CAAA;IACT,6DAAM,CAAA;IACN,iEAAQ,CAAA;IACR,iEAAQ,CAAA;IACR,qEAAU,CAAA,CAAM,IAAI;AACxB,CAAC,EAPW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAO5B;AAQD,qBAA6B,SAAQ,uBAAU;IAC3C,YAAmB,QAA2B,EAAS,KAAqB,EAAS,QAAqB;QACtG,KAAK,CAAC,2BAAc,CAAC,KAAK,CAAC,CAAC;QADb,aAAQ,GAAR,QAAQ,CAAmB;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,aAAQ,GAAR,QAAQ,CAAa;IAE1G,CAAC;IAEM,KAAK,CAAC,UAA4B;QACrC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChK,CAAC;CACJ;AARD,0CAQC","sourcesContent":["import { IExpression, Expression, ExpressionType } from './expression';\r\n\r\nexport enum UnaryAffixType {\r\n    Postfix,\r\n    Prefix\r\n}\r\n\r\nexport enum UnaryOperatorType {\r\n    Increment,      // ++\r\n    Decrement,      // --\r\n    Invert,         // !\r\n    Negative,       // -\r\n    Positive,       // +\r\n    Complement      // ~\r\n}\r\n\r\nexport interface IUnaryExpression extends IExpression {\r\n    operator: UnaryOperatorType\r\n    affix: UnaryAffixType\r\n    argument: IExpression\r\n}\r\n\r\nexport class UnaryExpression extends Expression implements IUnaryExpression {\r\n    constructor(public operator: UnaryOperatorType, public affix: UnaryAffixType, public argument: IExpression) {\r\n        super(ExpressionType.Unary);\r\n    }\r\n\r\n    public equal(expression: IUnaryExpression) {\r\n        return (this.type == expression.type && this.operator == expression.operator && this.affix == expression.affix && this.argument.equal(expression.argument));\r\n    }\r\n}\r\n"]}