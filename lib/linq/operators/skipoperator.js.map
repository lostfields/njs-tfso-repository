{"version":3,"file":"skipoperator.js","sourceRoot":"","sources":["../../../src/linq/operators/skipoperator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,yCAAoD;AAEpD,kBAAmC,SAAQ,mBAAiB;IACxD,YAAmB,KAAa;QAC5B,KAAK,CAAC,uBAAY,CAAC,IAAI,CAAC,CAAC;QADV,UAAK,GAAL,KAAK,CAAQ;IAEhC,CAAC;IAEM,CAAE,QAAQ,CAAC,KAAwB;QACtC,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;gBAAC,QAAQ,CAAC;YAE1D,MAAM,IAAI,CAAC;QACf,CAAC;IACL,CAAC;IAEc,aAAa,CAAC,KAA6B;;YACtD,IAAI,GAAG,GAAG,CAAC,CAAC;;gBAEZ,GAAG,CAAC,CAAmB,IAAA,UAAA,cAAA,KAAK,CAAA,WAAA;oBAAjB,IAAI,IAAI,iCAAA,CAAA;oBACf,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;wBAAC,QAAQ,CAAC;oBAE1D,MAAM,IAAI,CAAC;iBACd;;;;;;;;;;QACL,CAAC;KAAA;CACJ;AAxBD,oCAwBC","sourcesContent":["import { Operator, OperatorType } from './operator';\r\n\r\nexport class SkipOperator<TEntity> extends Operator<TEntity> {\r\n    constructor(public count: number) {\r\n        super(OperatorType.Skip);\r\n    }\r\n\r\n    public * evaluate(items: Iterable<TEntity>): IterableIterator<TEntity> {\r\n        let idx = 0;\r\n\r\n        for (let item of items) {\r\n            if (idx++ < this.count && this.removed == false) continue;\r\n\r\n            yield item;\r\n        }\r\n    }\r\n\r\n    public async * evaluateAsync(items: AsyncIterable<TEntity>): AsyncIterableIterator<TEntity> {\r\n        let idx = 0;\r\n\r\n        for await (let item of items) {\r\n            if (idx++ < this.count && this.removed == false) continue;\r\n\r\n            yield item;\r\n        }\r\n    }\r\n}"]}