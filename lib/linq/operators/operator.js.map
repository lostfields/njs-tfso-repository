{"version":3,"file":"operator.js","sourceRoot":"","sources":["../../../src/linq/operators/operator.ts"],"names":[],"mappings":";;AAAA,IAAY,YASX;AATD,WAAY,YAAY;IACpB,iDAAoB,CAAA;IACpB,+CAAoB,CAAA;IACpB,+CAAoB,CAAA;IACpB,qDAAoB,CAAA;IACpB,oDAAoB,CAAA;IACpB,gDAAoB,CAAA;IACpB,0DAAoB,CAAA;IACpB,mDAAoB,CAAA;AACxB,CAAC,EATW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QASvB;AAED;IAGI,YAAmB,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;QAF3B,YAAO,GAAY,KAAK,CAAC;IAInC,CAAC;IAKM,MAAM;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;CACJ;AAbD,4BAaC","sourcesContent":["export enum OperatorType {\n    Where       = 1 << 0,\n    Take        = 1 << 1,\n    Skip        = 1 << 2,\n    OrderBy     = 1 << 3,\n    Select      = 1 << 4,\n    Join        = 1 << 5,\n    SkipWhile   = 1 << 6,\n    Slice       = 1 << 7\n}\n\nexport abstract class Operator<TEntity> {\n    protected removed: boolean = false;\n\n    constructor(public type: OperatorType) {\n\n    }\n    \n    public abstract evaluate(...args: any[]): Iterable<TEntity>;\n    public abstract evaluateAsync(...args: any[]): AsyncIterable<TEntity>;\n\n    public remove() {\n        this.removed = true;\n    }\n}"]}