{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../src/linq/operations.ts"],"names":[],"mappings":";;AAEA;IAII;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAEM,GAAG,CAAC,QAA2B;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAEM,MAAM,CAAC,QAA2B;QACrC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAExC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,QAAQ,CAAC,MAAM,EAAE,CAAC;YAElB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAMM,KAAK,CAAC,CAAO;QAChB,EAAE,CAAA,CAAC,CAAC,IAAI,IAAI,CAAC;YACT,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;QAEtC,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,UAAU,IAAI,IAAI,YAAY,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,IAAI,CAAC;QAEpB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,CAAQ,MAAM;QACV,OAAO,IAAI,EAAE,CAAC;YACV,IAAI,KAAK,CAAC;YAEV,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjC,QAAQ,CAAC;gBAEb,KAAK,GAAG,MAAM,IAAI,CAAC;gBACnB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC;oBACf,KAAK,CAAC;YACd,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC;gBACf,KAAK,CAAC;QACd,CAAC;IACL,CAAC;CACJ;AA1DD,gCA0DC","sourcesContent":["import { Operator, OperatorType } from './operators/operator';\n\nexport class Operations<TEntity> {\n    private _stack: Array<Operator<TEntity>>;\n    private _removed: Array<Operator<TEntity>>;\n\n    constructor() {\n        this._stack = [];\n        this._removed = [];\n    }\n\n    public add(operator: Operator<TEntity>): void {\n        this._stack.push(operator);\n    }\n\n    public remove(operator: Operator<TEntity>): boolean {\n        var idx = this._stack.indexOf(operator);\n\n        if (idx != -1) {\n            this._removed.push(operator);\n            operator.remove();\n\n            return true;\n        }\n\n        return false;\n    }\n    \n    public first(): Operator<TEntity>\n    public first<T extends Operator<TEntity>>(operator: { new (...args: any[]): T }): T\n    public first(operator: { new (...args: any[]): Operator<TEntity> }): Operator<TEntity>\n    public first(operatorType: OperatorType): Operator<TEntity> \n    public first(o?: any): Operator<TEntity> {\n        if(o == null)\n            return this.values().next().value;\n\n        for (let item of this.values())\n            if (item.type === o || (typeof o == 'function' && item instanceof o))\n                return item;\n\n        return null;\n    }\n\n    public* values(): IterableIterator<Operator<TEntity>> {\n        while (true) {\n            let reset;\n\n            for (let item of this._stack) {\n                if (this._removed.indexOf(item) >= 0)\n                    continue;\n\n                reset = yield item;\n                if (reset === true)\n                    break;\n            }\n\n            if (reset !== true) // continue while loop if it's resetted\n                break;\n        }\n    }\n}"]}